from telegram import Update
from telegram.ext import ContextTypes
from database import DatabaseManager
import logging


class UserHandler:
    def __init__(self, db_manager: DatabaseManager):
        self.db_manager = db_manager
        self.logger = logging.getLogger(__name__)

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
        user = update.effective_user
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        try:
            employee = self.db_manager.get_employee_by_telegram_id(user.id)
            if not employee:
                # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                from ..models.department import Employee
                new_employee = Employee(
                    telegram_id=user.id,
                    username=user.username,
                    full_name=f"{user.first_name} {user.last_name or ''}".strip(),
                    email=None,
                    department_id=None,
                    position=None,
                    is_active=True
                )
                self.db_manager.add_employee(new_employee)
                self.logger.info(f"–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.id}")
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        
        welcome_text = (
            f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\n"
            "ü§ñ –Ø –±–æ—Ç –¥–ª—è —Å–±–æ—Ä–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤.\n\n"
            "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "‚Ä¢ /report - —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –æ—Ç—á–µ—Ç\n"
            "‚Ä¢ /help - –ø–æ–º–æ—â—å\n"
            "‚Ä¢ /status - —Å—Ç–∞—Ç—É—Å –æ—Ç—á–µ—Ç–æ–≤\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        )
        
        await update.message.reply_text(welcome_text)

    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = (
            "üìñ **–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞**\n\n"
            "ü§ñ –≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Å–±–æ—Ä–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.\n\n"
            "üìã **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n"
            "‚Ä¢ `/start` - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
            "‚Ä¢ `/report` - —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç\n"
            "‚Ä¢ `/status` - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤–∞—à–∏—Ö –æ—Ç—á–µ—Ç–æ–≤\n"
            "‚Ä¢ `/help` - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
            "üìù **–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç:**\n"
            "1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/report`\n"
            "2. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –±–æ—Ç–∞\n"
            "3. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è\n"
            "4. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É –æ—Ç—á–µ—Ç–∞\n\n"
            "‚ùì **–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?**\n"
            "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏–ª–∏ –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏."
        )
        
        await update.message.reply_text(help_text, parse_mode='Markdown')

    async def status_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /status"""
        user_id = update.effective_user.id
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            reports = self.db_manager.get_reports_by_user(user_id)
            
            if not reports:
                status_text = (
                    "üìä **–°—Ç–∞—Ç—É—Å –≤–∞—à–∏—Ö –æ—Ç—á–µ—Ç–æ–≤**\n\n"
                    "‚ùå –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –æ—Ç—á–µ—Ç–æ–≤.\n\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/report` –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞."
                )
            else:
                status_text = "üìä **–°—Ç–∞—Ç—É—Å –≤–∞—à–∏—Ö –æ—Ç—á–µ—Ç–æ–≤**\n\n"
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –æ—Ç—á–µ—Ç–æ–≤
                for report in reports[-5:]:
                    date_str = report.submitted_at.strftime('%d.%m.%Y %H:%M') if report.submitted_at else '–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω'
                    week_str = f"{report.week_start.strftime('%d.%m')} - {report.week_end.strftime('%d.%m.%Y')}"
                    status_icon = "‚ö†Ô∏è" if report.is_late else "‚úÖ"
                    
                    status_text += f"{status_icon} **–ù–µ–¥–µ–ª—è {week_str}**\n"
                    status_text += f"   üìÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω: {date_str}\n\n"
                
                # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                total_reports = len(reports)
                late_reports = sum(1 for r in reports if r.is_late)
                on_time_reports = total_reports - late_reports
                
                status_text += "üìà **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**\n"
                status_text += f"‚Ä¢ –í—Å–µ–≥–æ –æ—Ç—á–µ—Ç–æ–≤: {total_reports}\n"
                status_text += f"‚Ä¢ –í–æ–≤—Ä–µ–º—è: {on_time_reports}\n"
                status_text += f"‚Ä¢ –° –æ–ø–æ–∑–¥–∞–Ω–∏–µ–º: {late_reports}\n"
            
            await update.message.reply_text(status_text, parse_mode='Markdown')
            
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç—á–µ—Ç–æ–≤: {e}")
            await update.message.reply_text(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç—á–µ—Ç–æ–≤. "
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )