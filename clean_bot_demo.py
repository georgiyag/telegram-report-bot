#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π Telegram –±–æ—Ç–∞ –¥–ª—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
"""

import sqlite3
import logging
from datetime import datetime, timedelta
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

class BotDemo:
    def __init__(self):
        self.db_path = 'demo_bot.db'
        self.init_database()
        
    def init_database(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS departments (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT UNIQUE NOT NULL,
                description TEXT
            )
        ''')
        
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS employees (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                telegram_id INTEGER UNIQUE NOT NULL,
                username TEXT,
                first_name TEXT,
                last_name TEXT,
                department_id INTEGER,
                is_admin BOOLEAN DEFAULT FALSE,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (department_id) REFERENCES departments (id)
            )
        ''')
        
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS reports (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                employee_id INTEGER NOT NULL,
                week_start DATE NOT NULL,
                week_end DATE NOT NULL,
                completed_tasks TEXT,
                planned_tasks TEXT,
                obstacles TEXT,
                additional_info TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (employee_id) REFERENCES employees (id)
            )
        ''')
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        cursor.execute("INSERT OR IGNORE INTO departments (name, description) VALUES (?, ?)",
                      ("IT –æ—Ç–¥–µ–ª", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"))
        cursor.execute("INSERT OR IGNORE INTO departments (name, description) VALUES (?, ?)",
                      ("–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", "–û—Ç–¥–µ–ª –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ –∏ —Ä–µ–∫–ª–∞–º—ã"))
        
        conn.commit()
        conn.close()
        logger.info("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    
    def simulate_start_command(self, user_id=12345, username="test_user", first_name="–¢–µ—Å—Ç"):
        """–°–∏–º—É–ª—è—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã /start"""
        print("\n" + "="*50)
        print("üöÄ –ö–û–ú–ê–ù–î–ê /start")
        print("="*50)
        
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute("SELECT * FROM employees WHERE telegram_id = ?", (user_id,))
        user = cursor.fetchone()
        
        if user:
            print(f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ, {first_name}!")
            print("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.")
        else:
            # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            cursor.execute(
                "INSERT INTO employees (telegram_id, username, first_name, department_id) VALUES (?, ?, ?, ?)",
                (user_id, username, first_name, 1)  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é IT –æ—Ç–¥–µ–ª
            )
            conn.commit()
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {first_name} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!")
            print("–û—Ç–¥–µ–ª: IT –æ—Ç–¥–µ–ª")
        
        print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("‚Ä¢ /help - –ü–æ–º–æ—â—å")
        print("‚Ä¢ /create_report - –°–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç")
        print("‚Ä¢ /my_reports - –ú–æ–∏ –æ—Ç—á–µ—Ç—ã")
        print("‚Ä¢ /admin - –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å (–¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)")
        
        conn.close()
    
    def simulate_report_creation(self, user_id=12345):
        """–°–∏–º—É–ª—è—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞"""
        print("\n" + "="*50)
        print("üìù –°–û–ó–î–ê–ù–ò–ï –ï–ñ–ï–ù–ï–î–ï–õ–¨–ù–û–ì–û –û–¢–ß–ï–¢–ê")
        print("="*50)
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏
        today = datetime.now()
        week_start = today - timedelta(days=today.weekday())
        week_end = week_start + timedelta(days=6)
        
        print(f"üìÖ –ü–µ—Ä–∏–æ–¥: {week_start.strftime('%d.%m.%Y')} - {week_end.strftime('%d.%m.%Y')}")
        print("\nüîÑ –ü—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞:")
        
        # –°–∏–º—É–ª—è—Ü–∏—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
        completed_tasks = "1. –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏\n2. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–≥–æ–≤ –≤ –º–æ–¥—É–ª–µ –æ—Ç—á–µ—Ç–æ–≤\n3. –ö–æ–¥-—Ä–µ–≤—å—é –¥–ª—è –∫–æ–ª–ª–µ–≥"
        planned_tasks = "1. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n2. –í–Ω–µ–¥—Ä–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è\n3. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"
        obstacles = "–ó–∞–¥–µ—Ä–∂–∫–∞ —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –æ—Ç –∑–∞–∫–∞–∑—á–∏–∫–∞"
        additional_info = "–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
        
        print("\n‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏:")
        print(completed_tasks)
        
        print("\nüìã –ü–ª–∞–Ω—ã –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é:")
        print(planned_tasks)
        
        print("\n‚ö†Ô∏è –ü—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è:")
        print(obstacles)
        
        print("\nüí° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
        print(additional_info)
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        cursor.execute(
            "INSERT INTO reports (employee_id, week_start, week_end, completed_tasks, planned_tasks, obstacles, additional_info) VALUES (?, ?, ?, ?, ?, ?, ?)",
            (1, week_start.date(), week_end.date(), completed_tasks, planned_tasks, obstacles, additional_info)
        )
        conn.commit()
        conn.close()
        
        print("\n‚úÖ –û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
        print("üìß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É")
    
    def simulate_admin_panel(self):
        """–°–∏–º—É–ª—è—Ü–∏—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏"""
        print("\n" + "="*50)
        print("üëë –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨")
        print("="*50)
        
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute("SELECT COUNT(*) FROM employees")
        users_count = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM reports")
        reports_count = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM departments")
        departments_count = cursor.fetchone()[0]
        
        print(f"üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}")
        print(f"üìã –û—Ç—á–µ—Ç–æ–≤: {reports_count}")
        print(f"üè¢ –û—Ç–¥–µ–ª–æ–≤: {departments_count}")
        
        # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç—á–µ—Ç—ã
        print("\nüìã –ü–û–°–õ–ï–î–ù–ò–ï –û–¢–ß–ï–¢–´:")
        cursor.execute("""
            SELECT e.first_name, e.username, r.week_start, r.week_end, r.created_at
            FROM reports r
            JOIN employees e ON r.employee_id = e.id
            ORDER BY r.created_at DESC
            LIMIT 5
        """)
        
        reports = cursor.fetchall()
        for i, report in enumerate(reports, 1):
            first_name, username, week_start, week_end, created_at = report
            print(f"{i}. {first_name} (@{username}) - {week_start} –¥–æ {week_end}")
            print(f"   –°–æ–∑–¥–∞–Ω: {created_at}")
        
        # –û—Ç–¥–µ–ª—ã
        print("\nüè¢ –û–¢–î–ï–õ–´:")
        cursor.execute("SELECT name, description FROM departments")
        departments = cursor.fetchall()
        for dept in departments:
            name, description = dept
            print(f"‚Ä¢ {name}: {description}")
        
        conn.close()
    
    def simulate_help_system(self):
        """–°–∏–º—É–ª—è—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–æ–º–æ—â–∏"""
        print("\n" + "="*50)
        print("‚ùì –°–ò–°–¢–ï–ú–ê –ü–û–ú–û–©–ò")
        print("="*50)
        
        help_text = """
ü§ñ TELEGRAM –ë–û–¢ –î–õ–Ø –ï–ñ–ï–ù–ï–î–ï–õ–¨–ù–´–• –û–¢–ß–ï–¢–û–í

üìã –û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´:
‚Ä¢ /start - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ
‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
‚Ä¢ /create_report - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –æ—Ç—á–µ—Ç
‚Ä¢ /my_reports - –ü—Ä–æ—Å–º–æ—Ç—Ä –º–æ–∏—Ö –æ—Ç—á–µ—Ç–æ–≤
‚Ä¢ /settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è

üëë –ö–û–ú–ê–ù–î–´ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê:
‚Ä¢ /admin - –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
‚Ä¢ /stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
‚Ä¢ /export - –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ /broadcast - –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π

üìù –ö–ê–ö –°–û–ó–î–ê–¢–¨ –û–¢–ß–ï–¢:
1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /create_report
2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
3. –£–∫–∞–∂–∏—Ç–µ –ø–ª–∞–Ω—ã –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é
4. –û–ø–∏—à–∏—Ç–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
5. –î–æ–±–∞–≤—å—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é

‚è∞ –ù–ê–ü–û–ú–ò–ù–ê–ù–ò–Ø:
–ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–æ–≤ –∫–∞–∂–¥—É—é –ø—è—Ç–Ω–∏—Ü—É –≤ 16:00

üîß –ü–û–î–î–ï–†–ñ–ö–ê:
–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–∏—Å—Ç–µ–º—ã
        """
        
        print(help_text)
    
    def simulate_reminders(self):
        """–°–∏–º—É–ª—è—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"""
        print("\n" + "="*50)
        print("‚è∞ –°–ò–°–¢–ï–ú–ê –ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ô")
        print("="*50)
        
        print("üìÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π:")
        print("‚Ä¢ –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏: –ü—è—Ç–Ω–∏—Ü–∞")
        print("‚Ä¢ –í—Ä–µ–º—è: 16:00")
        print("‚Ä¢ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: UTC+3")
        
        print("\nüì® –ü—Ä–∏–º–µ—Ä –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:")
        print("‚îÄ" * 30)
        print("‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –æ—Ç—á–µ—Ç–µ")
        print("")
        print("–ü—Ä–∏–≤–µ—Ç! üëã")
        print("–ù–µ –∑–∞–±—É–¥—å —Å–æ–∑–¥–∞—Ç—å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç.")
        print("")
        print("üìã –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /create_report")
        print("‚è±Ô∏è –î–µ–¥–ª–∞–π–Ω: –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, 23:59")
        print("‚îÄ" * 30)
        
        print("\n‚úÖ –°—Ç–∞—Ç—É—Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π: –ê–∫—Ç–∏–≤–Ω—ã")
        print("üìä –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π: 15")
        print("üìà –ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç–≤–µ—Ç–æ–≤: 87%")
    
    def run_full_demo(self):
        """–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
        print("üé≠ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø TELEGRAM –ë–û–¢–ê")
        print("üìã –°—Ü–µ–Ω–∞—Ä–∏–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:")
        print("   1. –ö–æ–º–∞–Ω–¥–∞ /start - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("   2. –°–æ–∑–¥–∞–Ω–∏–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞")
        print("   3. –†–∞–±–æ—Ç–∞ —Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å—é")
        print("   4. –°–∏—Å—Ç–µ–º–∞ –ø–æ–º–æ—â–∏")
        print("   5. –°–∏—Å—Ç–µ–º–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π")
        
        # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–π
        self.simulate_start_command()
        self.simulate_report_creation()
        self.simulate_admin_panel()
        self.simulate_help_system()
        self.simulate_reminders()
        
        print("\n" + "="*50)
        print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
        print("="*50)
        print("‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞ –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        print("üöÄ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º Telegram")
        print("üì± –¢–æ–∫–µ–Ω –±–æ—Ç–∞: 8174058049:AAE8yOlAhKJhJGJHGJHGJHGJHGJHGJHGJHG")
        print("üîó –°—Å—ã–ª–∫–∞: @your_bot_username")

if __name__ == "__main__":
    demo = BotDemo()
    demo.run_full_demo()